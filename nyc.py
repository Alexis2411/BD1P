# -*- coding: utf-8 -*-
"""nyc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jm-e71AsI3CR0tfK05nPSt_0Q2VAhLLq
"""

!pip install streamlit

!wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip

!unzip ngrok-stable-linux-amd64.zip

get_ipython().system_raw('./ngrok authtoken 25weHPzRIm8EBYAIHI5zUF2erql_7vAeobXYD7PWtpPB6xrPp')

get_ipython().system_raw('./ngrok http 8501 &')

!curl -s http://localhost:4040/api/tunnels | python3 -c \
    'import sys, json; print("Execute the next cell and the go to the  following URL: " +json.load(sys.stdin)["tunnels"][0]["public_url"])'

# Commented out IPython magic to ensure Python compatibility.
# %%writefile citibike.py
# import pandas as pd
# import numpy as np
# import streamlit as st
# import matplotlib.pyplot as plt
# 
# st.title('Citybike')
# st.header('Integrantes:')
# st.subheader('Roman Alvarez Alexis Javier')
# st.subheader('Ortega Murillo Johan Paul')
# 
# sidebar = st.sidebar
# sidebar.title("MENU")
# 
# 
# DATA_URL = ('/content/citibike-tripdata.csv')
# DATE_COLUMN = 'started_at'
# @st.cache
# def load_data(nrows):
#     data = pd.read_csv(DATA_URL, nrows=nrows, encoding_errors='ignore')
#     lowercase = lambda x: str(x).lower()
#     data.rename(lowercase, axis='columns', inplace=True)
#     data[DATE_COLUMN] = pd.to_datetime(data[DATE_COLUMN])
#     return data
# 
# #Cargar datos si se selecciona en el checkbox
# agree = sidebar.checkbox("¿Quieres mostrar todos los datos? ")
# if agree:
#   data_load_state = st.text('Cargando...')
#   data = load_data(2000)
#   
#   data_load_state.text("Cargado! (using st.cache)")
#   st.dataframe(data)
# 
# agree = sidebar.checkbox("¿Quieres mostrar los recorridos por hora? ")
# if agree:
#   data_load_state = st.text('Cargando...')
#   data = load_data(2000)
#   data_load_state.text("Cargado! (using st.cache)")
#   #hacer la grafica
#   st.subheader('Numero de recorridos por hora')
#   hist_values = np.histogram(data[DATE_COLUMN].dt.hour, bins=24, range=(0,24))[0]
#   st.bar_chart(hist_values)
# 
# 
# 
# # Some number in the range 0-23
# hour_to_filter = sidebar.slider('HORA', 0, 23, 17)
# if hour_to_filter:
#   data_load_state = st.text('Cargando...')
#   data = load_data(2000)
#   data_load_state.text("Cargado! (using st.cache)")
# 
#   data2_rename = data.rename(columns = {'start_lat': 'lat', 'start_lng': 'lon'}, inplace = False)
# 
#   filtered_data = data2_rename[data2_rename[DATE_COLUMN].dt.hour == hour_to_filter]
# 
#   st.subheader('Mapa de los recorridos iniciados a las %s:00' % hour_to_filter)
#   st.map(filtered_data)

!streamlit run /content/citibike.py